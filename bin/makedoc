#!/usr/bin/env python
import texto, templating
import os, sys
from os.path import dirname, join, abspath
BASE = dirname(dirname(abspath(__file__)))

sys.path.insert(0, join(BASE, "src"))

doc  = []
text = open(join(BASE,"tests/test-complete.pcss")).read().decode("utf-8")
mode = None

for line in text.split("\n")[:-1]:
	line = line.decode("utf8")
	if "// EOF" in line:
		pass
	elif line.strip().startswith("//"):
		if   mode == "C": doc.append("```\n")
		elif mode != "T": doc.append("\n")
		doc.append(line.strip()[2:].strip())
		mode = "T"
	elif line.strip():
		if mode != "C": doc.append("\n```")
		doc.append(u"" + line)
		mode = "C"

FFLIB = os.path.expanduser("~/Workspace/FF-Experiments/build")
assert os.path.exists(FFLIB)
CSS  = ("lib/css/base.css", "lib/css/texto.css")
JS   = ("lib/js/jquery-2.1.1.js", "lib/js/extend-2.6.5.js", "lib/js/html-5.0.3.js", "lib/js/texto.js")
css  = "\n".join(file(os.path.join(FFLIB, _)).read() for _ in CSS)
js   = "\n".join(file(os.path.join(FFLIB, _)).read() for _ in JS)
HTML_PAGE = """
<!DOCTYPE html>
<html>
	<head>
		<meta charset="utf-8" />
		<title>PythonicCSS &mdash; Manual</title>
		<style>${css}</style>
		<script>${js}</script>
	<body>
		<div class="API use-texto use-base">
			<div class="documentation" style="margin-left:250px;">
				<div class="document">
				${body}
				</div>
			</div>
		</div>
	</body>
</html>
"""

body = u"\n".join(doc).decode("utf-8")
file("README.md","w").write(body)
body = os.popen("pandoc --section-divs README.md").read()
result = templating.Template(HTML_PAGE).apply(dict(
	css    = css,
	js     = js,
	body   = body,
))
file("README.html", "w").write(result.decode("utf-8"))
# EOF - vim: noet ts=4 sw=4
